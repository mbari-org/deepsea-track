# Find installed dependencies
find_package( Boost 1.7 COMPONENTS program_options REQUIRED )
include_directories( ${Boost_INCLUDE_DIR} )
find_package(XercesC 3 REQUIRED)
find_package(OpenCV 4.5 REQUIRED)
find_package(nlohmann_json 3 REQUIRED)
include_directories(/usr/local/include/)

#add_executable(test_xercesc test_xercesc.cc)
#target_link_libraries(test_xercesc ${XercesC_LIBRARIES})
#add_executable(test_options test_options.cc)
add_executable(test_voc test_voc.cc)
target_link_libraries(test_voc PRIVATE ${XercesC_LIBRARIES} ${XercesLib} ${OpenCV_LIBS} ${OpenCV_LIBS} ${Boost_LIBRARIES} deepsea-track_library)
#target_include_directories(test_options ${CMAKE_SOURCE_DIR}/include)
#add_executable(test_detmodel_load test_detmodel_load.cc)
#target_link_libraries(test_detmodel_load ${OpenCV_LIBS} onnxruntime)
#add_executable(test_detmodel_run test_detmodel_run.cc)
#target_link_libraries(test_detmodel_run ${OpenCV_LIBS} onnxruntime)
#add_executable(test_confignames util/configclassmap.cc)
#add_executable(test_detmodel_load test_detmodel_load.cc)
#add_executable(test_config test_config.cc util/config.cc)
#add_executable(test_flicker test_flicker.cc visual_event.cc image_cache.h image_cache.h preprocess.cc preprocess.h event_object.cc event_object.h util/math_utils.h test_surprise.cc)
#add_executable(test_surprise test_surprise.cc image_cache.h image_cache.h preprocess.cc preprocess.h event_object.cc event_object.h util/math_utils.h poisson_model.cc poisson_model.h surprise_detector.cc surprise_detector.h surprise_map.cc surprise_map.h)
#add_executable(test_preprocess test_preprocess.cc visual_event.cc image_cache.h image_cache.h preprocess.cc preprocess.h event_object.cc event_object.h surprise_detector.cc surprise_detector.h poisson_model.h poisson_model.cc surprise_map.cc surprise_map.h)
#add_executable(test_voc util/voc_object.cc util/voc_utils.h test_voc.cpp)
#add_executable(test_eventobject test_eventobject.cc util/voc_object.cc event_object.cc util/config.cc)
#add_executable(test_visualevent util/configclassmap.cc util/config.cc util/config.h util/configclassmap.h  test_visualevent.cc visual_event.cc visual_event.h event_object.cc surprise_detector.cc surprise_detector.h surprise_map.cc surprise_map.h poisson_model.h poisson_model.cc util/voc_object.cc util/voc_object.h)
#add_executable(test_tracker util/voc_object.cc util/voc_utils.h test/test_tracker.cpp visual_event.cc visual_event.h)
#add_executable(test_eventobjecttracker util/voc_object.cc util/voc_utils.h visual_event.cc event_object.cc preprocess.cc image_cache.h visual_event_mgr.cc visual_event_mgr.h)
#target_link_libraries(test_xercesc ${XERCESC_LIBS})
#target_link_libraries(test_surprise PRIVATE ${XercesLib} ${OpenCV_LIBS} ${Boost_LIBRARIES} nlohmann_json::nlohmann_json)
#target_link_libraries(test_visualevent PRIVATE ${XercesLib} ${OpenCV_LIBS} ${Boost_LIBRARIES} nlohmann_json::nlohmann_json)
#target_link_libraries(test_eventobject PRIVATE ${XercesLib} ${OpenCV_LIBS} ${Boost_LIBRARIES} nlohmann_json::nlohmann_json)
#target_link_libraries(test_config PRIVATE ${XercesLib} ${OpenCV_LIBS} ${Boost_LIBRARIES} ${NLOHMANN_LIBS})
#target_link_libraries(test_preprocess PRIVATE ${XercesLib} ${OpenCV_LIBS} ${Boost_LIBRARIES} nlohmann_json::nlohmann_json)
#target_link_libraries(test_detmodel_load PRIVATE ${XercesLib} ${OpenCV_LIBS} ${Boost_LIBRARIES} nlohmann_json::nlohmann_json)

# TODO convert these to real ctests
#add_test(NAME testoptions COMMAND test_options)
